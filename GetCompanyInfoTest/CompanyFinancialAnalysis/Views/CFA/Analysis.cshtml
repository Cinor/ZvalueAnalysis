@model IEnumerable<CompanyFinancialAnalysis.ViewModel.CompanyFinancial>

@{
    ViewBag.Title = "Analysis";
}


<h2>Analysis</h2>

@using (Html.BeginForm("Analysis", "CFA", FormMethod.Get))
{


    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.Label("分析組別1:大立光、玉晶光、今國光")
            <div class="col-md-10">
                @Html.RadioButton("group", 1)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("分析組別2:台達電、研華、凌華")
            <div class="col-md-10">
                @Html.RadioButton("group", 2)
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="分析" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}







<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.stockId)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.stockId)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
    }
</table>

<div class="panel-group" id="accordion">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">Collapsible Group 1</a>
            </h4>
        </div>
        <div id="collapse1" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="chart_div"></div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">Collapsible Group 2</a>
            </h4>
        </div>
        <div id="collapse2" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="chart2_div"></div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">Collapsible Group 3</a>
            </h4>
        </div>
        <div id="collapse3" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="chartContainer"></div>
            </div>
        </div>
    </div>
</div>











@section scripts{

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawCurveTypes);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawCurveTypes() {

            var data = new google.visualization.DataTable();
            data.addColumn('string', 'X');

            @{
                foreach (var item in Model)
                {
                    @:data.addColumn('number','@item.stockId');
                }
                var md = Model.ToList();
                if (Model.Count()!=0)
                {
                    for (int i = 0; i < 9; i++)
                    {
                        int j = 2008 + i;
                    @:data.addRows([['@j',@md[0].CFA_Information[i].ZValue,@md[1].CFA_Information[i].ZValue,@md[2].CFA_Information[i].ZValue]]);
                    }
                }

            }

            var options = {
                hAxis: {
                    title: 'Year'
                },
                vAxis: {
                    title: 'Zscore'
                },
                series: {
                    1: { curveType: 'function' }
                }
            };

            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
            chart.draw(data, options);

            //-------------------------------------------------------------------------

            var data2 = new google.visualization.DataTable();
            data2.addColumn('string', 'X');

            @{
                foreach (var item in Model)
                {
                    @:data2.addColumn('number','@item.stockId');
                }
                if (Model.Count()!=0)
                {
                    for (int i = 0; i < 9; i++)
                    {
                        int j = 2008 + i;
                    @:data2.addRows([['@j',@md[0].CFA_Information[i].EBIT,@md[1].CFA_Information[i].EBIT,@md[2].CFA_Information[i].EBIT]]);
                    }
                }

            }

            var options2 = {
                hAxis: {
                    title: 'Year'
                },
                vAxis: {
                    title: 'EBIT'
                },
                series: {
                    1: { curveType: 'function' }
                }
            };

            var chart2 = new google.visualization.LineChart(document.getElementById('chart2_div'));
            chart2.draw(data2, options2);


        }
    </script>




    <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script type="text/javascript">
        window.onload = function () {
            var chart = new CanvasJS.Chart("chartContainer", {
                theme: "theme2",
                zoomEnabled: true,
                animationEnabled: true,
                title: {
                    text: "Zscore分析"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right 
                    verticalAlign: "top",  // top, center, bottom
                },
                subtitles: [
                    {
                        text: "3家公司依年度分析"
                    }
                ],
                axisX: {
                    valueFormatString: "####"
                },
                axisY: {
                    title: "Zscore",
                },
                data: [
                    {
                        type: "spline",
                        name: "l1",
                        showInLegend: true,
                        xValueFormatString: "Year ####",
                        dataPoints: [
                            { x: 2012, y: 1 },
                            { x: 2013, y: 1.5 },
                            { x: 2014, y: 2 },
                            { x: 2015, y: 2.5 },
                            { x: 2016, y: 3 }
                        ]
                    },{
                        type: "spline",
                        name: "l2",
                        showInLegend: true,
                        xValueFormatString: "Year ####",
                        dataPoints: [
                            { x: 2012, y: 0.7 },
                            { x: 2013, y: 1.2 },
                            { x: 2014, y: 1 },
                            { x: 2015, y: 1.8 },
                            { x: 2016, y: 1.1 }
                        ]
                    }
                    @{ 
                        foreach (var item in Model)
                        {
                            @:,{type: "spline",
                            @:xValueFormatString: "@item.stockId Year ####",
                            @:name: "@item.stockId",
                            @:showInLegend:true,
                            @:dataPoints:[


                            for (int i = 0; i < item.CFA_Information.Count; i++)
                            {
                                int j = 2008 + i;
                                @:{ x: @j, y:@item.CFA_Information[i].ZValue },
                            }
                            @:]}
                        }

                    }
                    ]
            });
            chart.render();
        };
    </script>





    @Scripts.Render("~/bundles/jqueryval")

}
