@model IEnumerable<CompanyFinancialAnalysis.ViewModel.CompanyFinancial>

@{
    ViewBag.Title = "Analysis";
}


<h2>選擇分析組別</h2>
<hr />
@using (Html.BeginForm("Analysis", "CFA", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-4">
            <div class="input-group">
                <span class="input-group-addon">
                    <input type="radio" name="group" value="1" aria-label="...">
                </span>
                <input type="text" class="form-control" value="分析組別1:大立光、玉晶光、今國光" readonly="readonly" aria-label="...">
            </div><!-- /input-group -->
        </div><!-- /.col-lg-6 -->
        <div class="col-md-4">
            <div class="input-group">
                <span class="input-group-addon">
                    <input type="radio" name="group" value="2" aria-label="...">
                </span>
                <input type="text" class="form-control" value="分析組別2:台達電、研華、凌華" readonly="readonly" aria-label="...">
            </div><!-- /input-group -->
        </div><!-- /.col-lg-6 -->
        <div class="col-md-4">
            <div class="input-group">
                <input type="submit" value="分析" class="btn btn-primary" />
            </div><!-- /input-group -->
        </div><!-- /.col-lg-6 -->
    </div><!-- /.row -->
}
<p></p>
<hr/>
<p></p>
<h2>Analysis Chart</h2>

<div class="container">
    
    
    <div class="panel-group" id="accordion">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">Zscore</a>
                </h4>
            </div>
            <div id="collapse1" class="panel-collapse collapse">
                <div class="panel-body">
                    <div id="chartContainer" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">EBIT</a>
                </h4>
            </div>
            <div id="collapse2" class="panel-collapse collapse">
                <div class="panel-body">
                    <div id="chartContainer2" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapse3">流動比率</a>
                </h4>
            </div>
            <div id="collapse3" class="panel-collapse collapse">
                <div class="panel-body">
                    <div id="chartContainer3" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapse4">股東權益對負債比率</a>
                </h4>
            </div>
            <div id="collapse4" class="panel-collapse collapse">
                <div class="panel-body">
                    <div id="chartContainer4" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" data-parent="#accordion" href="#collapse5">負債比率</a>
                </h4>
            </div>
            <div id="collapse5" class="panel-collapse collapse">
                <div class="panel-body">
                    <div id="chartContainer5" style="height: 400px; width: 100%;"></div>
                </div>
            </div>
        </div>
    </div>
</div>


    @{ var md = Model.ToList();}
    @section scripts{

        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script>

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawCurveTypes);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawCurveTypes() {

            var data = new google.visualization.DataTable();
            data.addColumn('string', 'X');

            @{
                foreach (var item in Model)
                {
                    @:data.addColumn('number','@item.stockId');
                }
                if (Model.Count()!=0)
                {
                    for (int i = 0; i < 9; i++)
                    {
                        int j = 2008 + i;
                    @:data.addRows([['@j',@md[0].CFA_Information[i].ZValue,@md[1].CFA_Information[i].ZValue,@md[2].CFA_Information[i].ZValue]]);
                    }
                }

            }

            var options = {
                hAxis: {
                    title: 'Year'
                },
                vAxis: {
                    title: 'Zscore'
                },
                series: {
                    1: { curveType: 'function' }
                }
            };

            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
            chart.draw(data, options);

            //-------------------------------------------------------------------------

            var data2 = new google.visualization.DataTable();
            data2.addColumn('string', 'X');

            @{
                foreach (var item in Model)
                {
                    @:data2.addColumn('number','@item.stockId');
                }
                if (Model.Count()!=0)
                {
                    for (int i = 0; i < 9; i++)
                    {
                        int j = 2008 + i;
                    @:data2.addRows([['@j',@md[0].CFA_Information[i].EBIT,@md[1].CFA_Information[i].EBIT,@md[2].CFA_Information[i].EBIT]]);
                    }
                }

            }

            var options2 = {
                hAxis: {
                    title: 'Year'
                },
                vAxis: {
                    title: 'EBIT'
                },
                series: {
                    1: { curveType: 'function' }
                }
            };

            var chart2 = new google.visualization.LineChart(document.getElementById('chart2_div'));
            chart2.draw(data2, options2);


        }
        </script>




        <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
        <script type="text/javascript">
        window.onload = function () {
            var chart = new CanvasJS.Chart("chartContainer", {
                theme: "theme2",
                zoomEnabled: true,
                animationEnabled: true,
                width: 1100,
                title: {
                    text: "Zscore分析"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "top",  // top, center, bottom
                },
                subtitles: [
                    {
                        text: "3家公司依年度分析"
                    }
                ],
                axisX: {
                    valueFormatString: "####"
                },
                axisY: {
                    title: "Zscore",
                },
                data: [
                    @{
                        for (int i=0;i< md.Count;i++)
                        {
                            if (i==0)
                            {
                                @:{type: "spline",
                            }
                            else
                            {
                                @:,{type: "spline",
                            }
                            @:xValueFormatString: "@md[i].stockId Year ####",
                            @:name: "@md[i].stockId",
                            @:showInLegend:true,
                            @:dataPoints:[


                            for (int j = 0; j < md[i].CFA_Information.Count; j++)
                            {
                                int k = 2008 + j;
                                @:{ x: @k, y:@md[i].CFA_Information[j].ZValue },
                            }
                            @:]}
                        }

                    }
                    ]
            });
            chart.render();

            var chart2 = new CanvasJS.Chart("chartContainer2", {
                theme: "theme2",
                zoomEnabled: true,
                animationEnabled: true,
                width: 1100,
                title: {
                    text: "EBIT分析"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "top",  // top, center, bottom
                },
                subtitles: [
                    {
                        text: "3家公司依年度分析"
                    }
                ],
                axisX: {
                    valueFormatString: "####"
                },
                axisY: {
                    title: "EBIT",
                },
                data: [
                    @{
                        for (int i=0;i< md.Count;i++)
                        {
                            if (i==0)
                            {
                                @:{type: "spline",
                            }
                            else
                            {
                                @:,{type: "spline",
                            }
                            @:xValueFormatString: "@md[i].stockId Year ####",
                            @:name: "@md[i].stockId",
                            @:showInLegend:true,
                            @:dataPoints:[


                            for (int j = 0; j < md[i].CFA_Information.Count; j++)
                            {
                                int k = 2008 + j;
                                @:{ x: @k, y:@md[i].CFA_Information[j].EBIT },
                            }
                            @:]}
                        }

                    }
                    ]
            });
            chart2.render();

            var chart3 = new CanvasJS.Chart("chartContainer3", {
                theme: "theme2",
                zoomEnabled: true,
                animationEnabled: true,
                width: 1100,
                title: {
                    text: "流動比率分析"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "top",  // top, center, bottom
                },
                subtitles: [
                    {
                        text: "3家公司依年度分析"
                    }
                ],
                axisX: {
                    valueFormatString: "####"
                },
                axisY: {
                    title: "流動比率",
                },
                data: [
                    @{
                        for (int i=0;i< md.Count;i++)
                        {
                            if (i==0)
                            {
                                @:{type: "spline",
                            }
                            else
                            {
                                @:,{type: "spline",
                            }
                            @:xValueFormatString: "@md[i].stockId Year ####",
                            @:name: "@md[i].stockId",
                            @:showInLegend:true,
                            @:dataPoints:[


                            for (int j = 0; j < md[i].CFA_Information.Count; j++)
                            {
                                int k = 2008 + j;
                                var p = md[i].CFA_Information[j].compBD.CurrentAssets / md[i].CFA_Information[j].compBD.Currentliabilities;
                                @:{ x: @k, y:@p },
                            }
                            @:]}
                        }

                    }
                    ]
            });
            chart3.render();

            var chart4 = new CanvasJS.Chart("chartContainer4", {
                theme: "theme2",
                zoomEnabled: true,
                animationEnabled: true,
                width:1100,
                title: {
                    text: "股東權益對負債比率分析"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "top",  // top, center, bottom
                },
                subtitles: [
                    {
                        text: "3家公司依年度分析"
                    }
                ],
                axisX: {
                    valueFormatString: "####"
                },
                axisY: {
                    title: "股東權益對負債比率",
                },
                data: [
                    @{
                        for (int i=0;i< md.Count;i++)
                        {
                            if (i==0)
                            {
                                @:{type: "spline",
                            }
                            else
                            {
                                @:,{type: "spline",
                            }
                            @:xValueFormatString: "@md[i].stockId Year ####",
                            @:name: "@md[i].stockId",
                            @:showInLegend:true,
                            @:dataPoints:[


                            for (int j = 0; j < md[i].CFA_Information.Count; j++)
                            {
                                int k = 2008 + j;
                                var p = md[i].CFA_Information[j].Equity / md[i].CFA_Information[j].TotalLiability;
                                @:{ x: @k, y:@p },
                            }
                            @:]}
                        }

                    }
                    ]
            });
            chart4.render();

            var chart5 = new CanvasJS.Chart("chartContainer5", {
                theme: "theme2",
                zoomEnabled: true,
                animationEnabled: true,
                width: 1100,
                title: {
                    text: "負債比率分析"
                },
                legend: {
                    horizontalAlign: "right", // left, center ,right
                    verticalAlign: "top",  // top, center, bottom
                },
                subtitles: [
                    {
                        text: "3家公司依年度分析"
                    }
                ],
                axisX: {
                    valueFormatString: "####"
                },
                axisY: {
                    title: "負債比率",
                },
                data: [
                    @{
                        for (int i=0;i< md.Count;i++)
                        {
                            if (i==0)
                            {
                                @:{type: "spline",
                            }
                            else
                            {
                                @:,{type: "spline",
                            }
                            @:xValueFormatString: "@md[i].stockId Year ####",
                            @:name: "@md[i].stockId",
                            @:showInLegend:true,
                            @:dataPoints:[


                            for (int j = 0; j < md[i].CFA_Information.Count; j++)
                            {
                                int k = 2008 + j;
                                var p = md[i].CFA_Information[j].TotalLiability / md[i].CFA_Information[j].TotalAsset;
                                @:{ x: @k, y:@p },
                            }
                            @:]}
                        }

                    }
                    ]
            });
            chart5.render();
        };
        </script>





        @Scripts.Render("~/bundles/jqueryval")

    }
